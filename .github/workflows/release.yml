name: Create Release from Tag

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Existing tag to release'
        required: true
        type: string

  create:
    ref_type: tag  # Trigger on tag creation

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Determine tag name
      id: tag
      run: |
        if [ "${{ github.event_name }}" = "create" ]; then
          TAG_NAME="${{ github.event.ref_name }}"
        elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          TAG_NAME="${{ github.event.inputs.tag }}"
        else
          echo "❌ Unsupported trigger"
          exit 1
        fi
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        echo "✅ Detected tag: $TAG_NAME"

    - name: Check if release exists
      id: check_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME="${{ steps.tag.outputs.tag_name }}"
        if gh release view "$TAG_NAME" >/dev/null 2>&1; then
          echo "❌ Release already exists for tag $TAG_NAME"
          echo "release_exists=true" >> $GITHUB_OUTPUT
          exit 1
        else
          echo "✅ No existing release found for tag $TAG_NAME"
          echo "release_exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Generate release notes
      id: release_notes
      run: |
        TAG_NAME="${{ steps.tag.outputs.tag_name }}"
        echo "Generating release notes for $TAG_NAME..."

        # Get previous tag for comparison
        PREVIOUS_TAG=$(git tag --sort=-version:refname | grep -A1 "^$TAG_NAME$" | tail -1)

        if [ -n "$PREVIOUS_TAG" ] && [ "$PREVIOUS_TAG" != "$TAG_NAME" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s" "$PREVIOUS_TAG..$TAG_NAME" 2>/dev/null || echo "- Initial release")
          RELEASE_BODY="## What's Changed

$CHANGELOG

**Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREVIOUS_TAG...$TAG_NAME"
        else
          RELEASE_BODY="## What's Changed

- Initial release

**Full Changelog**: https://github.com/${{ github.repository }}/commits/$TAG_NAME"
        fi

# UNINDENTED multiline output for GitHub Actions
echo "release_body<<'EOF'" >> $GITHUB_OUTPUT
echo "$RELEASE_BODY" >> $GITHUB_OUTPUT
echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME="${{ steps.tag.outputs.tag_name }}"
        RELEASE_BODY="${{ steps.release_notes.outputs.release_body }}"

        echo "Creating GitHub release for $TAG_NAME..."

        gh release create "$TAG_NAME" \
          --title "🚀 Release $TAG_NAME (generated by workflow)" \
          --notes "$RELEASE_BODY" \
          --generate-notes

        echo "✅ Successfully created release for $TAG_NAME"

