name: Create Release
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name for the release (e.g., v1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false
permissions:
  contents: write
  packages: write
jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history and tags
        
    - name: Verify tag exists and check for existing release
      run: |
        set -e
        TAG_NAME='${{ github.event.inputs.tag }}'
        echo "Raw input value: '${{ github.event.inputs.tag }}'"
        echo "TAG_NAME variable: '${TAG_NAME}'"
        echo "TAG_NAME length: ${#TAG_NAME}"
        
        # Check if tag name is empty
        if [ -z "$TAG_NAME" ]; then
          echo "✗ Error: Tag name is empty. Please provide a tag name."
          echo "Available tags:"
          git tag -l --sort=-version:refname | head -10
          exit 1
        fi
        
        echo "Checking for tag: ${TAG_NAME}"
        
        git fetch --tags
        
        if git tag -l | grep -Fx "${TAG_NAME}"; then
          echo "✓ Tag '${TAG_NAME}' exists"
        else
          echo "✗ Error: Tag '${TAG_NAME}' does not exist"
          echo "Available tags:"
          git tag -l --sort=-version:refname | head -10
          exit 1
        fi
        
        # Check if release already exists
        if gh release list | grep -q "${TAG_NAME}"; then
          echo "⚠️ Release for tag '${TAG_NAME}' already exists"
          echo "Existing releases:"
          gh release list --limit 5
          exit 1
        else
          echo "✓ No existing release found for tag '${TAG_NAME}'"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.tag }}
        name: ${{ github.event.inputs.tag }}
        prerelease: ${{ github.event.inputs.prerelease }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
