name: Create Release

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release name (optional, defaults to tag name)'
        required: false
        type: string
      body:
        description: 'Release notes/description'
        required: false
        type: string
        default: 'Release created via workflow dispatch'
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Extract tag name from workflow context
      id: get_tag
      run: |
        if [[ ${{ github.ref }} == refs/tags/* ]]; then
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "✓ Running from tag: $TAG_NAME"
        else
          echo "✗ Error: This workflow must be run from a tag"
          echo "Current ref: ${{ github.ref }}"
          echo "Please select 'Use workflow from: Tags' and choose a specific tag"
          exit 1
        fi
        
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME='${{ steps.get_tag.outputs.tag_name }}'
        RELEASE_NAME='${{ github.event.inputs.release_name }}'
        BODY='${{ github.event.inputs.body }}'
        PRERELEASE='${{ github.event.inputs.prerelease }}'
        
        echo "Creating release for tag: $TAG_NAME"
        
        # Use release name or fall back to tag name
        if [ -z "$RELEASE_NAME" ]; then
          RELEASE_NAME="$TAG_NAME"
        fi
        
        # Check if release already exists
        if gh release list | grep -q "${TAG_NAME}"; then
          echo "⚠️ Release for tag '${TAG_NAME}' already exists"
          echo "Existing releases:"
          gh release list --limit 5
          exit 1
        fi
        
        echo "Creating release:"
        echo "  Tag: $TAG_NAME"
        echo "  Name: $RELEASE_NAME"
        echo "  Pre-release: $PRERELEASE"
        
        # Create release using GitHub CLI
        if [ "$PRERELEASE" = "true" ]; then
          gh release create "$TAG_NAME" \
            --title "$RELEASE_NAME" \
            --notes "$BODY" \
            --prerelease \
            --generate-notes
        else
          gh release create "$TAG_NAME" \
            --title "$RELEASE_NAME" \
            --notes "$BODY" \
            --generate-notes
        fi
        
        echo "✅ Release created successfully!"
