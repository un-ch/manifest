name: Create Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Select existing tag from dropdown or enter tag name'
        required: true
        type: string
      release_name:
        description: 'Release name (optional, defaults to tag name)'
        required: false
        type: string
      body:
        description: 'Release notes/description'
        required: false
        type: string
        default: 'Release created via workflow dispatch'
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Validate tag exists
      run: |
        TAG_NAME="${{ github.event.inputs.tag }}"
        echo "Validating tag: $TAG_NAME"
        
        # Fetch all tags
        git fetch --tags
        
        # Check if tag exists
        if git rev-parse "refs/tags/$TAG_NAME" >/dev/null 2>&1; then
          echo "✅ Tag '$TAG_NAME' exists"
        else
          echo "❌ Tag '$TAG_NAME' does not exist"
          echo ""
          echo "Available tags:"
          git tag -l --sort=-version:refname | head -10
          exit 1
        fi
        
    - name: Check for existing release
      run: |
        TAG_NAME="${{ github.event.inputs.tag }}"
        echo "Checking if release already exists for tag: $TAG_NAME"
        
        if gh release view "$TAG_NAME" >/dev/null 2>&1; then
          echo "❌ Release for tag '$TAG_NAME' already exists"
          echo ""
          echo "Existing release details:"
          gh release view "$TAG_NAME"
          exit 1
        else
          echo "✅ No existing release found for tag '$TAG_NAME'"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME="${{ github.event.inputs.tag }}"
        RELEASE_NAME="${{ github.event.inputs.release_name }}"
        BODY="${{ github.event.inputs.body }}"
        PRERELEASE="${{ github.event.inputs.prerelease }}"
        
        # Use release name or fall back to tag name
        if [ -z "$RELEASE_NAME" ]; then
          RELEASE_NAME="$TAG_NAME"
        fi
        
        echo "Creating release:"
        echo "  Tag: $TAG_NAME"
        echo "  Name: $RELEASE_NAME"
        echo "  Pre-release: $PRERELEASE"
        echo "  Body: $BODY"
        
        # Create release using GitHub CLI
        if [ "$PRERELEASE" = "true" ]; then
          gh release create "$TAG_NAME" \
            --title "$RELEASE_NAME" \
            --notes "$BODY" \
            --prerelease \
            --generate-notes
        else
          gh release create "$TAG_NAME" \
            --title "$RELEASE_NAME" \
            --notes "$BODY" \
            --generate-notes
        fi
        
        echo "✅ Release '$RELEASE_NAME' created successfully for tag '$TAG_NAME'!"
