name: Create Release

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name to release (must already exist)'
        required: false
        type: string
      body:
        description: 'Release notes/description'
        required: false
        type: string
        default: 'Release created via GitHub Actions'
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false

  # Automatic trigger when you create a release in GitHub UI
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Debug event info
      run: |
        echo "Event name: ${{ github.event_name }}"
        echo "Release tag (from event): ${{ github.event.release.tag_name }}"
        echo "Tag input (from dispatch): ${{ github.event.inputs.tag }}"

    - name: Determine tag
      id: tag
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          echo "tag_name=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
        else
          echo "tag_name=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        fi

    - name: Validate tag exists
      run: |
        TAG_NAME="${{ steps.tag.outputs.tag_name }}"
        echo "Validating tag: $TAG_NAME"

        git fetch --tags
        if git rev-parse "refs/tags/$TAG_NAME" >/dev/null 2>&1; then
          echo "‚úÖ Tag '$TAG_NAME' exists"
        else
          echo "‚ùå Tag '$TAG_NAME' does not exist"
          exit 1
        fi

    - name: Check for existing release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME="${{ steps.tag.outputs.tag_name }}"
        echo "Checking if release already exists for tag: $TAG_NAME"

        if gh release view "$TAG_NAME" >/dev/null 2>&1; then
          echo "‚ùå Release for tag '$TAG_NAME' already exists"
          gh release view "$TAG_NAME"
          exit 1
        else
          echo "‚úÖ No existing release found for tag '$TAG_NAME'"
        fi

    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME="${{ steps.tag.outputs.tag_name }}"
        BODY="${{ github.event.inputs.body }}"
        PRERELEASE="${{ github.event.inputs.prerelease }}"

        RELEASE_TITLE="üöÄ Release $TAG_NAME (created by GitHub Actions)"

        echo "Creating release:"
        echo "  Tag: $TAG_NAME"
        echo "  Title: $RELEASE_TITLE"
        echo "  Body: $BODY"
        echo "  Pre-release: $PRERELEASE"

        if [ "$PRERELEASE" = "true" ]; then
          gh release create "$TAG_NAME" \
            --title "$RELEASE_TITLE" \
            --notes "$BODY" \
            --prerelease \
            --generate-notes
        else
          gh release create "$TAG_NAME" \
            --title "$RELEASE_TITLE" \
            --notes "$BODY" \
            --generate-notes
        fi

        echo "‚úÖ Release '$RELEASE_TITLE' created successfully for tag '$TAG_NAME'!"

